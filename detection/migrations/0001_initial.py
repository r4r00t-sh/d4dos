# Generated by Django 4.2.7 on 2025-05-30 11:21

from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='NetworkStatistics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('total_packets', models.IntegerField(default=0)),
                ('total_bytes', models.BigIntegerField(default=0)),
                ('tcp_packets', models.IntegerField(default=0)),
                ('udp_packets', models.IntegerField(default=0)),
                ('icmp_packets', models.IntegerField(default=0)),
                ('http_requests', models.IntegerField(default=0)),
                ('unique_source_ips', models.IntegerField(default=0)),
                ('suspicious_activities', models.IntegerField(default=0)),
                ('blocked_ips', models.IntegerField(default=0)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='SystemHealth',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('cpu_usage', models.FloatField()),
                ('memory_usage', models.FloatField()),
                ('disk_usage', models.FloatField()),
                ('network_in', models.BigIntegerField()),
                ('network_out', models.BigIntegerField()),
                ('active_connections', models.IntegerField()),
                ('detection_engine_status', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='NetworkTrafficLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('source_ip', models.GenericIPAddressField()),
                ('destination_ip', models.GenericIPAddressField()),
                ('source_port', models.IntegerField()),
                ('destination_port', models.IntegerField()),
                ('protocol', models.CharField(max_length=10)),
                ('packet_size', models.IntegerField()),
                ('flags', models.CharField(blank=True, max_length=20, null=True)),
                ('is_suspicious', models.BooleanField(default=False)),
                ('threat_level', models.CharField(choices=[('LOW', 'Low'), ('MEDIUM', 'Medium'), ('HIGH', 'High'), ('CRITICAL', 'Critical')], default='LOW', max_length=20)),
            ],
            options={
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['source_ip', 'timestamp'], name='detection_n_source__cc1a7f_idx'), models.Index(fields=['destination_ip', 'timestamp'], name='detection_n_destina_c5ffb7_idx'), models.Index(fields=['is_suspicious'], name='detection_n_is_susp_c19a29_idx')],
            },
        ),
        migrations.CreateModel(
            name='DDoSAlert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('alert_type', models.CharField(choices=[('VOLUMETRIC', 'Volumetric Attack'), ('PROTOCOL', 'Protocol Attack'), ('APPLICATION', 'Application Layer Attack'), ('SYN_FLOOD', 'SYN Flood'), ('UDP_FLOOD', 'UDP Flood'), ('ICMP_FLOOD', 'ICMP Flood'), ('HTTP_FLOOD', 'HTTP Flood')], max_length=50)),
                ('source_ip', models.GenericIPAddressField()),
                ('target_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('severity', models.CharField(choices=[('LOW', 'Low'), ('MEDIUM', 'Medium'), ('HIGH', 'High'), ('CRITICAL', 'Critical')], default='MEDIUM', max_length=20)),
                ('packets_per_second', models.IntegerField(default=0)),
                ('bytes_per_second', models.IntegerField(default=0)),
                ('duration', models.IntegerField(default=0)),
                ('description', models.TextField()),
                ('is_resolved', models.BooleanField(default=False)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('mitigation_action', models.TextField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['source_ip', 'timestamp'], name='detection_d_source__658ab2_idx'), models.Index(fields=['alert_type'], name='detection_d_alert_t_825abf_idx'), models.Index(fields=['severity'], name='detection_d_severit_ddbb0a_idx'), models.Index(fields=['is_resolved'], name='detection_d_is_reso_6b47b2_idx')],
            },
        ),
        migrations.CreateModel(
            name='BlockedIP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField(unique=True)),
                ('reason', models.CharField(max_length=200)),
                ('blocked_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('blocked_until', models.DateTimeField(blank=True, null=True)),
                ('is_permanent', models.BooleanField(default=False)),
                ('block_count', models.IntegerField(default=1)),
                ('last_activity', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'ordering': ['-blocked_at'],
                'indexes': [models.Index(fields=['ip_address'], name='detection_b_ip_addr_050d17_idx'), models.Index(fields=['is_permanent'], name='detection_b_is_perm_f9edaf_idx')],
            },
        ),
    ]
